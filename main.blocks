<xml xmlns="https://developers.google.com/blockly/xml"><block type="pxt-on-start" id="ELp`Hp)g`6(F]L`KNytx" x="0" y="0"><statement name="HANDLER"><block type="typescript_statement" id="#lgnX93C1:EkXiS5bH/9" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="namespace spritelives {" line1="    const SPRITE_LIVES_EXTENSION_LIFE_DATA = &quot;SPRITE_LIVES_EXTENSION_LIFE_DATA&quot;" line2="    let lifeZeroHandlers: { [key: number]: (sprite: Sprite) =&gt; void } = {}" line3="" line4="    /**" line5="     * set sprite lives" line6="     * @param sprite" line7="     * @param lives" line8="     */" line9="    //% lives.defl=-1" line10="    //% blockId=&quot;set_sprite_life&quot; block=&quot;set %sprite=variables_get(mySprite) life to %lives&quot;" line11="    export function setSpriteLife(sprite: Sprite, lives: number) {" line12="        sprite.data[SPRITE_LIVES_EXTENSION_LIFE_DATA] = lives" line13="    }" line14="" line15="    /**" line16="     * get sprite lives" line17="     * @param sprite" line18="     */" line19="    //% blockId=&quot;get_sprite_life&quot; block=&quot;%sprite=variables_get(mySprite) life&quot;" line20="    export function lifeOf(sprite: Sprite) {" line21="        return sprite.data[SPRITE_LIVES_EXTENSION_LIFE_DATA]" line22="    }" line23="" line24="    /**" line25="     * change sprite lives" line26="     * @param sprite" line27="     * @param delta" line28="     */" line29="    //% delta.defl=-1" line30="    //% blockId=&quot;change_sprite_life&quot; block=&quot;change %sprite=variables_get(mySprite) life by $delta&quot;" line31="    export function changeLifeBy(sprite: Sprite, delta: number) {" line32="        let life = lifeOf(sprite)" line33="        if (!life) {" line34="            return" line35="        }" line36="        life += delta" line37="        setSpriteLife(sprite, life)" line38="        if (life &lt;= 0) {" line39="            let handler = lifeZeroHandlers[sprite.kind()]" line40="            if (handler) {" line41="                control.runInParallel(" line42="                    () =&gt; handler(sprite)" line43="                )" line44="            }" line45="" line46="        }" line47="    }" line48="" line49="" line50="    /**" line51="    * life zero callback" line52="    * @param spriteKind " line53="    * @param handler" line54="    */" line55="    //% draggableParameters=&quot;reporter&quot;" line56="    //% blockId=&quot;on_sprite_life_zero&quot; block=&quot;on $sprite of kind $spriteKind=spritekind life zero&quot;" line57="    export function onLifeZero(spriteKind: number, handler: (sprite: Sprite) =&gt; void) {" line58="        if (!handler || spriteKind == undefined) {" line59="            return;" line60="        }" line61="" line62="        lifeZeroHandlers[spriteKind] = handler" line63="    }" line64="" line65="}" numlines="66"></mutation></block></statement></block></xml>